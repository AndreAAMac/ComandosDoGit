git config --global user.name "André Machado" - cadastrar o nome
git config --global user.email "andre_almac@outlook.com" -> cadastrar o email
git config --global core.editor vscode -> cadastrar o editor de code
git config user.name -> ver o nome cadastrado
git config --list -> ver tudo

cd C:/Users -> navegar entre pastas
dir ou ls -> ver o quem tem na pasta
cd .. -> voltar 

git init -> iniciar o repositório
git status -> mostra os arquivos
git add nome do arquivo -> adicionando um por um
git add -A -> adiciona todos que não estão track
git commit -m "mensagem" -> realizar o commit
git log -> ver todos os commit feitos - o que importa e os 7 primeiros dígitos gerados pelo commit
git branch -> para saber onde estamos, tipo todos os branchs
git commit -am "mensagem" -> Não quer passar pelo add
git diff -> ver o que foi alterado no arquivo
git diff --name-only -> nome dos arquivos alterados
git diff nomedoArquivo -> entrar no arquivo alterado e ver as alterações
git checkout HEAD -- nomedoArquivo -> ele retorna para antes das alterações, versão anterior 
git remote add origin https://github.com/AndreAAMac/ComandosDoGit.git -> criar o repositorio no seu pc 
git remote -> para ver se deu Certo
git remote -v -> mostra as duas opções que tenho fech e puxar do repositorio remoto e push levar do meu pc para o remoto
git push -u origin main -> enviar


Voltar para o commit de sua escolha
git reset --soft numerodoCommit-> volta antes do commit - porém sem apagar as alterações e sem commitar, status antes do commit - indicado para trab em Equipe
git reset --mixed numerodoCommit-> volta antes do add 
git reset --hard numerodoCommit-> volta para o qualquer commit e apaga o resto - Evite usar

Branch -> versões diferentes do meu sistema "master" é o principal
README -> Comentário e instruções
Commit -> Enviar as modificações 

git branch -> para saber onde estamos, tipo todos os branchs
git branch nomeDoNovo -> criar um novo ele importa o que tem no outro
git checkout nomeDoBranch -> mudar de branch



